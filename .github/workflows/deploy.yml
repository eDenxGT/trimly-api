name: API Deployment

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        env:
          EC2_HOST: ${{ secrets.EC2_HOST }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          PORT: ${{ secrets.PORT }}
          DATABASE_URI: ${{ secrets.DATABASE_URI }}
          CORS_ALLOWED_ORIGIN: ${{ secrets.CORS_ALLOWED_ORIGIN }}
          JWT_ACCESS_KEY: ${{ secrets.JWT_ACCESS_KEY }}
          JWT_REFRESH_KEY: ${{ secrets.JWT_REFRESH_KEY }}
          JWT_ACCESS_EXPIRES_IN: ${{ secrets.JWT_ACCESS_EXPIRES_IN }}
          JWT_REFRESH_EXPIRES_IN: ${{ secrets.JWT_REFRESH_EXPIRES_IN }}
          GOOGLE_SERVICE_CLIENT_EMAIL: ${{ secrets.GOOGLE_SERVICE_CLIENT_EMAIL }}
          GOOGLE_SERVICE_PRIVATE_KEY: ${{ secrets.GOOGLE_SERVICE_PRIVATE_KEY }}
          BCRYPT_SALT_ROUNDS: ${{ secrets.BCRYPT_SALT_ROUNDS }}
          LOGGER_STATUS: ${{ secrets.LOGGER_STATUS }}
          EMAIL_USER: ${{ secrets.EMAIL_USER }}
          EMAIL_PASS: ${{ secrets.EMAIL_PASS }}
          OTP_EXPIRY_IN_MINUTES: ${{ secrets.OTP_EXPIRY_IN_MINUTES }}
          REDIS_USERNAME: ${{ secrets.REDIS_USERNAME }}
          REDIS_PASS: ${{ secrets.REDIS_PASS }}
          REDIS_HOST: ${{ secrets.REDIS_HOST }}
          REDIS_PORT: ${{ secrets.REDIS_PORT }}
          RAZORPAY_KEY_ID: ${{ secrets.RAZORPAY_KEY_ID }}
          RAZORPAY_SECRET: ${{ secrets.RAZORPAY_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_BUCKET_NAME: ${{ secrets.AWS_BUCKET_NAME }}

        run: |
          echo "Starting deployment..."
          echo "Setting up SSH key..."
          echo "$SSH_PRIVATE_KEY" > key.pem
          chmod 400 key.pem

          echo "Creating local .env file..."
          cat > .env <<EOF
          PORT=${PORT}
          DATABASE_URI=${DATABASE_URI}
          CORS_ALLOWED_ORIGIN=${CORS_ALLOWED_ORIGIN}
          JWT_ACCESS_KEY=${JWT_ACCESS_KEY}
          JWT_REFRESH_KEY=${JWT_REFRESH_KEY}
          JWT_ACCESS_EXPIRES_IN=${JWT_ACCESS_EXPIRES_IN}
          JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN}
          GOOGLE_SERVICE_CLIENT_EMAIL=${GOOGLE_SERVICE_CLIENT_EMAIL}
          GOOGLE_SERVICE_PRIVATE_KEY=${GOOGLE_SERVICE_PRIVATE_KEY}
          BCRYPT_SALT_ROUNDS=${BCRYPT_SALT_ROUNDS}
          LOGGER_STATUS=${LOGGER_STATUS}
          EMAIL_USER=${EMAIL_USER}
          EMAIL_PASS=${EMAIL_PASS}
          OTP_EXPIRY_IN_MINUTES=${OTP_EXPIRY_IN_MINUTES}
          REDIS_USERNAME=${REDIS_USERNAME}
          REDIS_PASS=${REDIS_PASS}
          REDIS_HOST=${REDIS_HOST}
          REDIS_PORT=${REDIS_PORT}
          RAZORPAY_KEY_ID=${RAZORPAY_KEY_ID}
          RAZORPAY_SECRET=${RAZORPAY_SECRET}
          AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
          AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
          AWS_REGION=${AWS_REGION}
          AWS_BUCKET_NAME=${AWS_BUCKET_NAME}
          EOF

          echo "Uploading .env to EC2..."
          scp -o StrictHostKeyChecking=no -i key.pem .env $EC2_USERNAME@$EC2_HOST:~/trimly-api/.env

          echo "Connecting to EC2 and deploying..."
          ssh -o StrictHostKeyChecking=no -i key.pem $EC2_USERNAME@$EC2_HOST <<EOF
            set -e
            cd ~/trimly-api
            git pull origin main

            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi

            echo "Restarting API with PM2..."
            pm2 flush
            pm2 restart all || pm2 start dist/app.js --name trimly-api
          EOF

          rm key.pem .env
